<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAINUExURf///wF5qrPY6azP4WiMl9TeNAAAAAB8rpmsr82SL8Kxmrjl96/T5QB+sWyx0QB7rNnj
        NQB1qLfd75+ztg5/rtzmNRRffa/W6sq4oBuFsimPuABtmtvkVGeLlmWPmqjK23yVoQBxpezs7EnD3BQA
        AANji9bgPgM8VAAAH4Seq2yBi4CQk3SLlgwuPtTT0vLy8gA2UwNehANTdAMfKwBLagAAJEhdY7sAJWN2
        f5GvvVJOS2xnZHp2c4WCgAAAGAA7WgAAD7Curb69vQBWgmN5jAMcJ7vELQITGhBLYpWTkSMfGwdScQAa
        LzI8PkFGRoyoto/G3byBF3ZgPmp2edCZPVxcXNSjUGCfu9vc3GnR5qKgnre1tAAoQhsOADIrJAAjOREo
        LSwxMjJ6nGlpcnyFM52lHHyvxgBimaaoP0VndAA2WDY4HwA7alJQAIOKAImJkwAANmhoBSkgAHFyVltf
        Ha+2JUlFI4+UEBwbBTdFWkJCAHN2AEp+lgAaOhwJHU9OWFZXAEYrO7R1cLG5Rq6NkTMzCmZMS5x/gIFO
        SczTS6FlX9OMiBgaAI9lYx4yN82hn49fboRseS0XCJpOX7AjOwAaRKJAVJRVZHVDPaZ8N2NJIJOBY5ln
        AIZdH4SMVX9fJ3lhO7B8I8emdVQ3GtKOCEFsekdhRzBxfl1ZSqWWgks/M0CesyRMVSuEl2xfUcb03noA
        ABgrSURBVHhe7ZyNXxNXusdJkDMgM5lkkgBJlEQkxLwBCXGa8E58gQRIaCNCEUHs2i3dtXvbXa+rxnu9
        7ra7rru23Ze722pv272yVIv+jfd5zjmTF0zQuglhP3d+Hw2TQcl8ed7PmaRJly5dunTp0qVLly5dunTp
        0qVLly5dunTp0qVLly5dunTp0qVLly5dunTp0qVLly5dunTp0qVLly5d/7R6+qdSY8OoxZGRkdHR0bGx
        sVQqtbKyMjV14UIy2d/fv7y83NMzMMD/w7+U+lMZQsZXBydi0YjX5fV6I5HIqVPRaCwWm5iYGBxcXV1d
        nztxYpJourg2PJqaSvb/i9BeuEjWoy5JEqhkA0iW2ZOiJE2CYDC4XPBr6Jj1hc9c2hiZOuiYU707lwWJ
        gb2iZFk2yAaH0+mEv44oeecgM64QdcnBL/yHSqaMp35kv0J6+I87cEoR9V2nhV/w68jy4wfX7C3mlmH+
        Aw+WBlIkvvDP8MnSj9X3AK+lxXxliv/QA6SBMbK5sPTP2E849v4VO/KB7D/hP/bAiPKZjr0GoI2nJEH4
        6VVqPyrzB/38Jx8MAV/HgsnyOnyYW/BAOjV9xc7xUGd/xn/2QVDPKIkumOTXclCnbHA6ZIPk+rcPiwZE
        mUf5T2+8kM/0mnxgQgB0OAzvfwQZtEz2n/Of32gNjE6ecppsr5tgZOCzOCPkA3OZAUH2X/BXaLBSq17J
        YcOe5IWuDHqxl0h2OKDGOy6v3jy7y4Ag84cHoa/pj7lkbCmxtcbeOhqdhdY6NhuNQIsdcUmcpIpsYD+n
        ZJu5WMgwZhA/hGS6zF+lUUqOZtJpOhtMT585MzQURvl8vljMhwfwhYRde9rRaYMY7CCFDGM2X7t25Zpm
        TvOVJH+lxihFwhGIPeqNfEQA0afshAGexYiLw1SUU3ZePvnvBSLz9V/e2Dx9+sbNs4z4bAMJe8bIqmuv
        4UHyngEzuqSYr6oRaRKNkff6GI7ZfiXtUajck3301NkV/nL7rv5FErPsGWKusK+joyMckwzVCR0OKXLy
        F/eOUJgW+9mPThsVI5XiuUWpG1Xyp9LzeYfWaFWSYJC9sXDH7FBEik5XKyI2ILzde83MrGVuuXU7ofHB
        nwyz6zv8JfdT0JzF6XBk41f6oqTIkG/Wa4iBAcNn+LkXZHNKsf/4kZY37ddIQOGAxnYgPH2Wnv9P/qr7
        p4FREtCGvyqIEnNQX1SSIqSqi9qcrhM3zx7RDHhn1a3xGZFU8V+n7Bv8dfdL0JwdLRluKyOCe9IIFGQf
        iVSLVcE50fue3dxHY9B+nXgKfGBCPHZ/SAkn+Svvj4Avb3KUhtWLiILg8kZ9vpmwS3KRIQjIynJcJnf6
        uAHtZ2/+1103g0MplLD5KlYQM+GvvR9aHiFR2+7ecxciOihUfG8MPDRGIAwrS7D5/vgrewtFNNs/mMz+
        upSwnRIaP0ZC+/4R9i+ue4vlHMVSaSmi5PJhAHZ0TMPhGVK1YZOiJz8EvJYWAIQSsWls/83dBIUDAyIh
        PUgzwv1pTK2jayQdDmNTBi0ZNGPQdEa8LmhWBMlGqfHCNb6OIS+mGLmKhwqukx/fg6s/Aohm862TUCKU
        sfu8UID5FE44h3Fo/2g/1tt61kgMO2torSG+IlHfkM8Xnp6mq9SEDEH7GY24DJJhaIbyzYQNQniPFBMj
        t/owAMFHoUScpokzd59lGgXg2jVC+Dct9o/3gXCZeLUhSAAzCdCGGSQh3BGWcKTwRqIzwAuoUSlyBgCh
        i9kjxUiukzfvmVsgAI8cOdL34W1WIpT4/QA9QDgehsr6vhESW/FqJd9MRPL5LJKvI8waapwIbRCgrhgJ
        Cy6COTRGZqsYUAYDvgdoR/rgj/1XJMRrvBK4/w4eUQdlJqSE5pab+7AqPOZl6YUmFiEy4wNCA7hrpMRK
        mG4EaF+kaBScdbravIQGpDUeQtDccvVGocYrh+4vMsJCGCKh/Vqv63a9V9umyDrMsbNR3DxyQV4RwmHJ
        FwYfHSozE82o0pkY62IqN6yyMEGu21toie/rK6vxiufXn+AzZkJOOGe/9ReDNFdfwv61cBToYGiH3DKE
        wTZNpn1DQ7O+MMQmqx3FoiF4ieQj3ioeKrlOXO3DFAqA5r6bN5qLgNCi/fpv1Ibwl4ehsX3j5k8lWVit
        55C/PHzpckkBBCCoCN4I4IbPFLOol9YMVjTINORRTlQuNOAVO4Yf1EH79clsCR+QJX7z22Z+qJkwS+up
        sFo/G0KLnS/r0JjoWhOHjaJpWdUYCs/gkkW1GkENCE0o8PX13ft4UxsDUXgIhLypYYSKoq7T31UdCVNk
        62XbKxwWaLFoRCBW9zQga9JajnyANb4omk7do7/jJ2lTqrjTkLJQ0u06LWNc6N10Vr7aKqJFo8r/YAbE
        9IJN2k8KczwTDbvm0bt+jRD+hiZ5OvbWKdP0ZN63VXG3PbWrDWfiBsQEeqTPfGu9OAYyUULxnbtH2fl2
        oyJmBvnvalaoD+HUeBRaNJiDSpPlK6kCIhjwTmGl8N5HtEkrFdoMpN6PcxtCimHRLLhmhbpUiyQh6Y2N
        jfRFMnlmHZpsXghfDXY3YtGArMsuMSBHZalTUe+r9Lmi5OZYNAveKHyV5mpeLcaIevQQqPvQoaOBuKpm
        5jfSkCun1wd9CKux0uuvoHJEaGIKBrSf/f0nfyixICt72iCh8qbGnY5BuwsSol58EWm81oQjlxBvl7oP
        HY0j7Ea6FwsDmyVwtbcCaQniLgPedv/hd8U5l3un1mZv3h+GAyVEWIoRDDELPZBq3ZeOPgDbVRXa9Wh8
        E+yKqNPgwzg1AShei6YCYrkBfwkR+MndYp3ghV0jjN//RFGatRSDHsoiQqjxBJwknOVlAquiC8+DA0+G
        cfulhJIhggF7C7uBdjAg9NTv3A9phNoQyEEpYVbr+IRZ6qEoucarGL0BTrBL3WhZ+rBL6L/A2Ut8JdUe
        ESGFFjZbcC0bA1DJfcoTZsF2hTb70N3fqlqKccUMxZRWW8Lkpco+2v3Z54Dy+eeBqi58VE0TX4ERSn/J
        dq79A23ODXxK0wkeFkzITijZ3/4xSlOMLERL5jLZ0suvrTYajvML3qXAG58B4Z/+/EYVE6O642mtK5Ul
        7+QtbS0bxgheA9uV0BSdkfC43EkBng+VYMDS6VJ2rfFrq4kGqkbhX/8E1uvu3osQNE/ob1+w/OVqYTvX
        fmW82HD6V7QJotxJIcVMMCwhoqUYLu8Iv7iaqL9aIu3+7L/xO4E3aKWsqm4Vcr1g+elHxe3cljuFMQKY
        EkFeLsqdVPHzFCNYygwIEqJj/OJqopTKL3W3GGH3529UjUOmbvWM4dTk9cImNdSIwhyIM4M7eJc9Z6va
        zISFQckg7TYgnFqv6X1fw9Uy6V/feOPPP4Mvf34J4aHueVLkg0H3hkhtxGigv859yssFCz80oZKAQQmz
        LxR5NGB5FyHUtuBvBFRV3YwHju52xu6jn38WAELqq3trruChUARPM4NRSmqukWK5AOE5JTDucuDtUEJk
        FuwnnBp8P1qsFbK3pommaV4Rm92JrD8Uj29kgDVQJGW1cO8wpDpKcMpFma/dKLEXjThlMamVCxT4KqQY
        C97vJTMDWsjY8vIIKSBK47W9OXG+sxklKlk1YWx2ZxdzcRVJ469AVpB6hxvRfkfLKvjICNWkVi5Q7e2Q
        YmwmcFHBG6NQhI5KyTk+nEqx2ppwgBGK7rjfKIruQDzRaXRnm4NZD/Rn1H9fiXSc30XRwkzI0iZ/VJN/
        w3NMmGKOLZksYEHWpUmD3GJP2WKz4K1x2z3wgBImQs3AFw+4RXji9hgDnaIIFnUnwHuh595RIVA5TEWp
        dN+vxXydLUuwgsDLQjz5NxFPonBQspiWLIUuTbakl6dSYxeami7QBhwAazz9DjwwognBgNkAUCJtsxjq
        DFDSrEhlFIEUElKGx2mFXjVOqAXtV6mTFkxICUNT2pIaXYtxLtgsxS5NiC0GN+ZzlxabmgickSK1BtQI
        PYlAQmR88CxgjDNbamfQjUM0JfnjG2pmZwe9F1A5H+YaeouBfYObsOikUNpb+ZIarsUcM71LDcgGQUwr
        QTVntVozK01rMJTFSM2n+4FLlDBE3ZNLI2wOlZx0x+EbEKgeUfnizSz1XnV+fl5V48Da3T1+jQYiDUNu
        PPYItc//O+q7SoKckhaWjpV2abKBtBJjK4g0pVzSej22ZKYpIfVKTRqhWEaouo3A194per567Kfe2wmR
        msh6oM58+WWa3kRxlhbDggkpoTHhuYu7FUp87tgSeiirEUyydz4XcAOgdaO/f2IcfLX2mqxAGK9AKMaz
        wNfeno27Hz4OsRKDoqjftn35IyA039tkhNRkzEmNRnfofkBR3Bsxy4IJDOid5XQoIbo4n7DmLrWimxLI
        N3UQqUIIp0sJRbcagmt2x7Ni5+jj51m3u7mzIPejtq/+BwmvoQ05mmZCY3P80zgWQeeCE1JMcZJHCb4c
        MVozwVarWrd72Qi1VoBxMIGXBhT6VSOE+AuJcOEQhWKzGGxre/PRo0dfff3NN2+hno982/bFh1AuGOEu
        ExqNi5+q6qrFtMBqRCmgQRjMEaV1AwhzKX5BNRehBAE3JWESA+0hfC56+HOIv2acZZEPnobaXtS3Nykh
        BBxHKxIqn9wlpxxaiuFoXFIYCefrS0hZKJGmdqj49GwiC0SUT1TaPR4oFyjR/ybHKtXvseRjpuHeWXBS
        Y/vTIZpiDKUphktaR0KoF631I0zvJoRr87iZTcG0UAfBcqLigSik34az2UqEk1gs7JBpuO00E0IRnBBo
        igEPfUHSehCKRS4TzKl1ey9QJoF28iT45TeDdylQ/xmx6AlhX+NGPoxMpkRFQhwv7BkgZGDchFgEnQsO
        CMFI6T0AmqTVYNoPxZC0XqrHZgzVMLIBIfdAqAdisz+h2RRrQSLgx6BiJ1CQOtvaHv+dkWn6IzY19n/X
        VvD56rYSOHEMDVjJQ1GQS9VFK6v49dIIjTU/syH4FviimM1qxNiTJ+AkYBeFhOeM5zka1/9egXJhv6r1
        2GwChkkQagT10MKAWyZpMNdKWq2QaOr3PplRPxJmkZN6KHyBDFPwWjGEfFoIMnV+9fjv7V2U69z585z0
        S2xqtPEQ4PBvIu01LeAkWNFDQZJ3eqU1R9Rgro53so1hWWdZs2CqhJ/bFL+DWZE/YRITX/e3Jx9TrnNt
        33LCr/AWbfMt7V48kBIPO7FG2Kp4KABGASwZzBCyWMebL1K0rCeg0yyQiAmPn9oUrZpIlIYgfNMd8Pvb
        jRTwC3/31tF8fvPpW189+pqW/FuFXRho06KmBQNW+dI2rUSy4LtY/3ufmpqmsAUFJjAVgwK5Pcxr0W0T
        hYhEiWIoYGz3KNRsby6ZlhZMpgVT3mTK53Ehw/wB35iHmWn6MhoQd5ToqtoLEgzj+/N+2AsqdtEJT1my
        DGVpdGIE+vFIk9Efd8O50DlK+IXJ1G0CwqUlIFyiTc0Vfs+TkvNBBEKRZ3ueFRAFF6npum91JTewMLhL
        x4hmdwC8Fg0IRcJTHIPFRDzRiSefI9+589+A9RbAiGBCIPwlbdvo+AQe2sFqhIHvKL2ACMP8fr3dtz98
        urMZJr9dhB5qQMihHj8/KeJcQc92UsLzbV9T/+SEJgKZpuUsjsBK6/gSFnkagnx3fBciDPN1q/C7tTx+
        Cuy1izCe8CMKZB7oBVgDh9M9rZcwQSHhufNt35hMS1v5fH6LEWLbZt5QFEUdZAaEIiEZIhODg15JLkOU
        hcH0/r0Br4dIPug+2bKFprgbCfEUdKyQdMTmEC5TUcBsvHO07dy5tvPnfg5JBiAhCk2mLRNdFbZ/rLin
        89SABsOsyzWYHruQnFokwFhElA31GearaIAIwg13cxmhO2D08NIBUzB03h66zIiBaYxnjUB4/hwYkQYh
        16ZpkrZtt4Jz71IDyoaYHOtdWe5Pgjsur8WKiPuXY7iIQbbMlw/5xrgxxFOrGOr0ZNk6FQImAlAwYMjH
        Mg9OWtBS3nQSCM0td7aYAfG2g7lFKObzamYaOrLhmMAdFQD3K8dw9cKv25UpWThsbgdejVgMGeMJ7L9h
        QoQZOGEUE6FA7psvoF5scjoUJJvb18z297gBIQS90mTQOq+2WkFBNdnU62KxWIcV0ZdpDV7a4Jrnq8Eg
        yCWhQlziWk02FACFQDBIbW4/63727Fn+549o/HEB4eq1e/+4wQwoQwjC9G7NBOnY0NpqnU8lxyXMqFJs
        X/qYMrH9ApfqNrIlYSNkVk8hLpGQmrAdvh0S3Tvbm54tQNzKb9FKwZQH2gf/+IuHGxCLRMcGLjAVRCDe
        4VuOiQZ8rsewl9Zky8RmwO+mMDDXlxFqErPuzS1oy7a6uzfffLS1VTQi1oudjXfZu4foJCGQYDDOLQiy
        5lLDXmjUbjfiwwRGtB0EweKKzgAmjBUBY4CviJYR+gPbWUU0Bp51f9PW9tZ2MRDRnOos5TMYojhJRDas
        aVzppXj4kBnxSl7SkDf4jhXXv/COWIs36lMzgVzCLXaCOdkeDZPo34pDDTFmt7fOtT1O7GxrRoRMasr7
        IFsyDwU5VnMFE+bmczDizo9NRGq/KfFKStErKxH2Wce8sQnfjhrwJIIsDEHNYmqbjhzGre+gWJjyBSPm
        TfkHLkrIZ12bg7TOJxhgazCYzlmti0my1qAPElip/HY62k+y+9ZVNR7wZMGoqW032lWJvwVtqWlpU+UV
        f+uBzyDNzAAb9VB8v31vjm24oItag8RqVZcbxIc7k9XfvSxTUMFgcUWiEz7fzoNcIODx545uf9v2d+hj
        dpagK83nL+FCthDzSd4I21OyLEUywQwjpNsuJGiFktgoJVeFvd6gzYSffYGfVWVzXL6Mb1QLf/RdPr8D
        hJsPBiP0NmIg9GqLFRZTLMe2lFrdbGMJCOuz7fIq6r8N/dRLESG2nNCUOG0y2BXvorVYXF5vxGvR7pIW
        YmHOh4SDuUU/TTRufKSE+9yqlWj5JDYbL0ekN8AgZkH4UWsFoZfyQyA8EVxMlBCilzbOhgMn8MpejkgJ
        d0+yRQmzpTYkGqGVPhKoFvvdjZaI3ciyN6LswE8j4U8qCghLbAiEzEtR1tyG1boPbymsKmyJQXsh2vAj
        /2RnVQOCdhPm4rylgeYUnLSOq/YvF+FXVh2RRp/DITv580raRZgLak1bkBDVas3V9JbRH6i0dmXVENFF
        EZM9q6JywvGclTBAFDRt0438UJ01i/ZxldUQnQjHMk1VCdFSwtVFq5opBCIakr9YQ7T4dG1oghXran7q
        cOKfPVVKaHDGAA+jj8vamKFC09jhrq4na+ye6+qIe1twF6EQ6Q205nDbjAGqjf08y5WHhw8f7no4Tu+S
        qIb4wwhlA+nP5XIkgIjW1vk0f6kGaXmtCxGfsHcfVUPcq1KAZKkk0xgk30ZTU08qQ6ZzQbBlwz8lcOMJ
        EAIiLoe9lqAtd3lnioSSj98E2zO1WN+9wVdUfy8aEa1YasFCD/ZSSYYJ0vt0TSOUhXBt7/KtgUafc0Tt
        TmTg83Z4bTJMDkJVv9Uk+8jzJ11dD1fZf5aFuQP4ObnTTxjid9qajbzZffz49935jljM67JoG0iVJLgm
        nx6G/901ygn3d1PiVdVDGOJhwgxmU48fP/728bfffhs4n21vzfhiURgF6ffKJbjIKPvtPFzF7wuGfd6U
        eFUtM8Su59SIto7vgW8BIBGR6ftnOxMvOiwA8t8NI4TnDfu8vJeoZ5rFIv0cMucmwHUaxVJC1I5lFyLU
        vYcM8PDhh4MC3ofe0OZlb432QrrowoQoOzsAp3MB3bQTHtCWDHH357BJYfZ7QT0ZFKRGrYi+opYXycWn
        YZdBsiHhwoIRHighuKuIx+Cq5WurgreX46GXTkixRq2Ivrp6lqdG0idil7fAbEYgexsegfU40ooAevwB
        Z2OS5go+CnnYNdjIGfCHqOfCWObSzrPvwWoYhwsiGA8OjUY42OFsVLKLcDzMUYTU7Q7Ruqh/ZWTtzM72
        9zT83kYPRU89vs13X6iE6FNuwq7Da2T+QIdgZQ30T40OE7KzDfbk2mZvTmISJngvdPg7sniAc+jL1JNc
        GR3uJWQISbfoJ0jQj5AQBAkIu7oOP3lKRv8F7feCevovrIwtZi4SQsbnVidiEZBv7fl3aySdOvAZ9Idp
        oKc/ObWSGhsdAaUuJBu4DqpLly5dunTp0qVLly5dunTp0qVLly5dunTp0qVLly5dunTp0qVLly5dunTp
        0qVL1/9DNTX9H01NU+pgusEPAAAAAElFTkSuQmCC
</value>
  </data>
</root>